A new release of the "B7094" IBM 7094 emulator (previously hosted at https://www.fosshub.com/B7094-IBM7094-Emulator.html) is now available on GitHub at https://github.com/Bertoid1311/B7094/.

This new version, as well as fixing some long-standing bugs in the user interface, has some new capabilities in the emulation itself:

1.  The scripted demos have been expanded to allow choosing between two alternative versions of IBSYS: the originally-included two-tape ASYS1/ASYS8 system recovered by Paul Pierce a quarter-century ago, and the single-tape "Aerojet-General" KSYS61 version (also originally recovered by Paul Pierce).

2.  Using the KSYS61 system, FORTRAN II now supports "chaining", which allows the early-60s "Structural Engineering System Solver" program (STRESS III, from MIT, originally transcribed from a listing on bitsavers by Richard Cornwell and later further proofread by others), to build and run to completion with sample input data from the STRESS user's manual downloadable
from MIT.

3.  Sample programs can now be run in relocatable binary form (for FORTRAN II, in KSYS61 only; for IBJOB languages, in either version of IBSYS).  Instructions (and Unix-y utilities) for extracting a binary job from the "peripheral punch" tape generated by the compiler, are provided in a separate "reloc_scripts" archive.

4.  The emulator demo scripts can be run either in "verbose" mode, which provides lots of explanation and references; or "silent" mode, which skips all the verbiage and just presents straightforward option menus on the minimum number of click-through screens.

5.  The demos have been reorganized into more logical groups by "subsystem" -- either FORTRAN II (which provides FORTRAN II and the Fortran Assembly Program) or IBJOB (which provides FORTRAN IV, COBOL, and a Macro Assembly Program).  A couple of the utility demos from the earlier release have been retained: the IBEDT editor used to maintain IBSYS itself (in the demo, used just
to copy and list the contents of a system tape), and the IBJOB "Librarian" used to maintain the IBLIB subroutine library (here just used to list and cross-reference the contents of the library).  A couple of stand-alone diagnostic programs -- one loaded from the card reader the other from tape -- are still included (though neither one runs completely error-free).

B7094 does not support the range of peripherals (and pass the array of diagnostics) that Rich Cornwell's SimH-based i7090 does; neither does it support the spectacular photo-realistic panels created by Roberto Sancho Villa.  And it can't run CTSS.  But B7094's graphical interface still provides some visual entertainment, and it's possibly easier than the more sophisticated emulators for a newcomer to get started with,
while still providing some significant capabilities.

B7094 was originally developed -- 20 years ago -- using Borland Delphi on Windows; it was later ported to Lazarus/Free Pascal.  The current Version 3.4A release was built using the newest (as of the end of last year) versions of these development tools (Lazarus 2.2.4, 28 Sept 2022; Free Pascal 3.2.2, 20 May 2021). 
Sources are included, and both 32-bit and 64-bit executables are now provided.  The 32-bit executable will still run on Windows XP.
There are Windows dependencies "baked in" to the code, but the program can be run on Linux using Wine (with a few non-fatal quirks), and even under Wine 8.x on x86 MacOS (the 64-bit executable has been tested on 'Catalina' in a VM).  There are rumors that some Windows programs will run on ARM-based Macs using Wine with Rosetta 2; this has not been tested.

A scripting language (in files "*.EC7" -- "Execute Commands for the B7094") serves to configure the emulator, load IBSYS, and submit programs (in a job stream including the necessary IBSYS control cards) via the emulated card reader or a designated tape drive.
These scripts serve the same function as the "do_ibsys.txt" and "*.job" files used by the SimH-based i7090 and i7094, but they do not require typing a command line.  The canned demos are implemented by means of the EC7 scripting language (and utilize script commands to display text, display option menus, advance to and return from a succession of screens, and call EC7 subroutines defined in the same script file).  However, a user can run their own programs by embedding them (by means of an Include command) in a suitable EC7 file, which can then be opened and run from the built-in Editor.  Some simple, in-line "Xample_*.EC7" files are provided as models for doing this.  More sophisticated jobs (such as running relocatable binaries) can be constructed by examining the demo scripts (and utilizing the tools provided in the "reloc_scripts" archive).

Like Rich Cornwell's SimH-based i7090, B7094 expects to "see" the correct parity on tapes (odd for binary records, even for BCD ones). This is in fact necessary to be able to run relocatable binary jobs in FORTRAN II (with the KSYS61 version of IBSYS only). Tapes created on other emulators can be used with B7094 provided they are
1) in P7B format (originated by Paul Pierce: this is the default with Dave Pitt's s709, with SimH format being optional; while Rich Cornwell's i7090 and Bob Supnik's i7094 are the other way around, with SimH format the default, but P7B available as an option),
2) have the correct parity (i7090 creates tapes with correct parity, and I believe i7094 and s709 do as well, and 3) use the "alternate" BCD coding for BCD records (the default for i7090 and i7094, optional for s709).  Likewise, tapes created by B7094 can be used on other emulators (whether or not the other emulators expect to "see" parity; i7090 does, I believe i7094 and s709 do not), if those emulators can
1) utilize tapes in P7B format tapes, either by default (s709) or optionally (i7090, i7094), 2) interpret BCD records using "alternate" coding (i7090 and i7094 do this by default; s709 can optionally do so).
B7094's "Tape Viewer" is a useful tool for examining the contents of any P7B tape: a small script can be created and run in the Editor to mount the tape, then clicking on the tape in the Tape Drives window will bring it up in the Tape Viewer.

Grateful acknowledgement is due to Richard Cornwell for providing some of the sample demo jobs, and for providing technical assistance in getting this new release operational.
And of course to Al Kossow et al. for the bitsavers archive, without which many retro-emulators couldn't exist; to Bob Supnik, Dave Pitts, and Richard Cornwell for their work getting **really**-working IBM 709x emulators operational in the
mid-late 2000s.  And to Paul Pierce, who got the ball rolling with his collection of tapes, without which there would be
nothing to run on such emulators (well, apart from the CTSS software from MIT).

Enjoy!